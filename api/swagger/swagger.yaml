swagger: "2.0"
info:
  version: "0.0.1"
  title: Framework Tools Study
  description: This is a sample test to practice many frameworks and test tools. There are many endpoints with different actions. 
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths 
basePath: "/"
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /:  
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello World!' to the caller
      # used as the method name of the controller
      operationId: hello
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /urldata:  
    get:
      description: Some information that will be read from the query and it will be added in the response body.
      # used as the method name of the controller
      operationId: urldata
      parameters:
        - name: dado
          in: query
          description: The data that will be read from query and added in the response body.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UrlDataResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /soma:
    x-swagger-router-controller: soma
    post:
      summary: Executes a Fraud Check
      description: >
        text
      parameters:
        - in: body
          name: body
          description: description test.
          required: true
          schema:
            $ref: "#/definitions/SomaRequest"
      #tags:
      #  - Client
      #  - Fraud Check
      responses:
        "201":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SomaResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users:
    x-swagger-router-controller: users route controller
    get:
      description: Return the list of available users in the system.
      operationId: Return Users
      responses:
        "200":
          description: Return the list of users.
          schema:
            $ref: "#/definitions/usersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{userId}:
    x-swagger-router-controller: users route controller
    get:
      description: Return the content of a specific user by userId.
      parameters:
        - name: userId
          in: path
          description: User Id.
          required: true
          type: number
      operationId: Return User content
      responses:
        "200":
          description: Return the list of users
          schema:
            $ref: "#/definitions/usersResponseArrayItems"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update a specific user by userId.
      parameters:
        - name: userId
          in: path
          description: User Id.
          required: true
          type: number
        - in: body
          name: body
          description: Data to update an user.
          required: true
          schema:
            $ref: "#/definitions/userRequest"
      operationId: Update User content
      responses:
        "200":
          description: User updated
          schema:
            $ref: "#/definitions/messageResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete a specific user by userId.
      parameters:
        - name: userId
          in: path
          description: User Id.
          required: true
          type: number
      operationId: Delete a user by userId
      responses:
        "200":
          description: User deleted
          schema:
            $ref: "#/definitions/messageResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/:
    x-swagger-router-controller: users route controller
    post:
      description: Create an user.
      operationId: Create an User account
      parameters:
        - in: body
          name: body
          description: Data to create an user.
          required: true
          schema:
            $ref: "#/definitions/userRequest"
      responses:
        "200":
          description: Return the data of a created user and an userId
          schema:
            $ref: "#/definitions/usersResponseArrayItems"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/deleteAll:
    x-swagger-router-controller: users route controller
    delete:
      description: This URL will delete all the users.
      operationId: Delete All Users
      responses:
        "200":
          description: Will delete all the users of the system
          schema:
            $ref: "#/definitions/messageResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    type: message
  valoresArrayItems:
    required:
      - a
      - b    
    type: object
    properties:
      a:
        type: number
        minimum: 1
      b:
        type: number
        minimum: 1
  UrlDataResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  SomaRequest:
    required:
      - a
      - b    
    type: object
    properties:
      a:
        type: number
        minimum: 1
      b:
        type: number
        minimum: 1
  SomaResponse:
    required:
      - resultado
      - valores
    type: object
    properties:
      resultado:
        type: number
        minimum: 1
      valores:
        type: array
        items:
          type: number
  usersResponse:
    type: array
    items:
      $ref: "#/definitions/usersResponseArrayItems"
  usersResponseArrayItems:
    type: object
    properties:
      user:
        type: object
        properties:
          username:
            type: string
          registry:
            type: string
      id:
        type: number
  usersResponseArrayUserItems:
    type: object
    properties:
      username:
        type: string
      registry:
        type: string
  userRequest:
    required:
      - username
      - registry    
    type: object
    properties:
      username:
        type: string
      registry:
        type: string
  messageResponse:
    required:
      - message
    properties:
      message:
        type: string