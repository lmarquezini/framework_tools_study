[
    {
        "name": "base-path-test.js",
        "test": "'use strict';\nvar chai = require('chai');\nvar ZSchema = require('z-schema');\nvar validator = new ZSchema({});\nvar supertest = require('supertest');\nvar api = supertest('http://localhost:3000'); // supertest init;\n\nchai.should();\nvar arete = require('arete');\n\ndescribe('/', function() {\n  describe('get', function() {\n    it('should respond with 200 Success', function(done) {\n      /*eslint-disable*/\n      var schema = {\n        \"$ref\": \"#/definitions/HelloWorldResponse\"\n      };\n\n      /*eslint-enable*/\n      api.get('/')\n      .query({\nname: 'DATA GOES HERE'\n      })\n      .set('Accept', 'application/json')\n      .expect(200)\n      .end(function(err, res) {\n        if (err) return done(err);\n\n        validator.validate(res.body, schema).should.be.true;\n        done();\n      });\n    });\n    it('load tests with 200 Success', function(done) {\n      arete.loadTest({\n        name: '__get_load_test',\n        requests: 1000,\n        concurrentRequests: 100,\n        targetFunction: function(callback) {\n          api.get('/')\n          .query({\nname: 'DATA GOES HERE'\n          })\n          .set('Accept', 'application/json')\n          .expect(200)\n          .end(function(err, res) {\n            callback(err, res);\n          });\n        },\n        printResponses: false, // true or false\n        printReport: true, // true or false\n        printSteps: true, // true or false\n        callback: function(error, report) {\n          if (error) return done(error);\n\n          report.successfulResponses.length.\n          should.equal(report.results.length);\n          (report.averageResponseTimeInternal).\n          should.be.lessThan('TIME DATA HERE');\n          (report.timeElapsed).\n          should.be.lessThan('TIME DATA HERE');\n          done();\n        }\n      });\n    });\n\n    it('should respond with default Error', function(done) {\n      /*eslint-disable*/\n      var schema = {\n        \"$ref\": \"#/definitions/ErrorResponse\"\n      };\n\n      /*eslint-enable*/\n      api.get('/')\n      .query({\nname: 'DATA GOES HERE'\n      })\n      .set('Accept', 'application/json')\n      .expect('DEFAULT RESPONSE CODE HERE')\n      .end(function(err, res) {\n        if (err) return done(err);\n\n        validator.validate(res.body, schema).should.be.true;\n        done();\n      });\n    });\n    it('load tests with default Error', function(done) {\n      arete.loadTest({\n        name: '__get_load_test',\n        requests: 1000,\n        concurrentRequests: 100,\n        targetFunction: function(callback) {\n          api.get('/')\n          .query({\nname: 'DATA GOES HERE'\n          })\n          .set('Accept', 'application/json')\n          .expect('DEFAULT RESPONSE CODE HERE')\n          .end(function(err, res) {\n            callback(err, res);\n          });\n        },\n        printResponses: false, // true or false\n        printReport: true, // true or false\n        printSteps: true, // true or false\n        callback: function(error, report) {\n          if (error) return done(error);\n\n          report.successfulResponses.length.\n          should.equal(report.results.length);\n          (report.averageResponseTimeInternal).\n          should.be.lessThan('TIME DATA HERE');\n          (report.timeElapsed).\n          should.be.lessThan('TIME DATA HERE');\n          done();\n        }\n      });\n    });\n\n  });\n\n});\n"
    }
]